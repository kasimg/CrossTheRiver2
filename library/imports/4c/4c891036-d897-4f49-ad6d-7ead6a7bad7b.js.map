{"version":3,"sources":["../../../../assets/Script/assets/Script/Boat.js"],"names":["cc","Class","extends","Component","properties","passages","boatInfo","initSeats","seats","i","push","index","leftPos","x","Data","passagePositionLeft","y","rightPos","passagePositionRight","occupied","initBoatStatus","tigerNum","deerNum","atLeft","Math","abs","node","boatPositionLeft","searchSeat","length","isEmpty","validPassageCount","getOn","passage","onBoat","seatIndex","getOff","sail","delX","delY","sailAction","moveBy","v2","easing","easeCubicActionOut","onLoad","start"],"mappings":"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","file":"Boat.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport Data from 'static/Data';\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    passages: [],  //  存放在船上的animal对象\n    boatInfo: {},\n  },\n\n  //  初始化座位\n  initSeats() {\n    this.seats = [];\n    for (let i = 0; i < 3; i++) {\n      this.seats.push({\n        index: i,\n        leftPos: {\n          x: Data.passagePositionLeft[i].x,\n          y: Data.passagePositionLeft[i].y,\n        },\n        rightPos: {\n          x: Data.passagePositionRight[i].x,\n          y: Data.passagePositionRight[i].y,\n        },\n        occupied: false,\n      });\n    }\n  },\n\n  //  初始化船上动物的数量信息\n  initBoatStatus() {\n    this.boatInfo = {\n      tigerNum: 0,\n      deerNum: 0,\n    };\n  },\n\n\n  //  判断是否在左岸\n  atLeft() {\n    if (Math.abs(this.node.x - Data.boatPositionLeft.x) < 10) return true;\n    return false;\n  },\n  \n  //  寻找空座位，如果有座位返回座位index，如果没有返回null\n  searchSeat() {\n    for (let i = 0; i < this.seats.length; i++) {\n      if (!this.seats[i].occupied) return i;\n    }\n    return -1;\n  },\n\n  //  判断船是否为空\n  isEmpty() {\n    let validPassageCount = 0;\n    for (let i = 0; i < this.passages.length; i++) {\n      if (this.passages[i]) validPassageCount++;\n    }\n    if (validPassageCount < 1) return true;\n    return false;\n  },\n\n  //  上船\n  getOn(passage, index) {\n    // if (index !== -1) \n    this.seats[index].occupied = true;\n    this.passages[index] = passage;\n    passage.onBoat = true;\n    passage.seatIndex = index;\n  },\n\n  //  下船\n  getOff(passage, index) {\n    // console.log('index: ' + index);\n    this.seats[index].occupied = false;\n    this.passages[index] = null;\n    passage.onBoat = false;\n    passage.seatIndex = -1;\n  },\n\n  //  移动\n  sail({ delX, delY }) {\n    const sailAction = cc\n      .moveBy(1, cc.v2(delX, delY))\n      .easing(cc.easeCubicActionOut());\n\n    // const se = cc.sequence(sailAction, cc.callFunc(() => {\n    //   // console.log('finish');\n    // }, this));\n    // this.node.runAction(se);\n    // console.log('运动距离为:', delX, delY);\n    return sailAction;\n  },\n\n  onLoad () {\n    this.initSeats();  //  初始化座位对象\n    this.initBoatStatus();\n    // this.initBoatStatus();\n    // console.log(this.seats);\n  },\n\n  start() {\n\n  },\n\n  // update (dt) {},\n});\n"]}