{"version":3,"sources":["Boat.js"],"names":["cc","Class","extends","Component","properties","passages","boatInfo","default","initSeats","seats","i","push","index","leftPos","x","Data","passagePositionLeft","y","rightPos","passagePositionRight","occupied","initBoatStatus","tigerNum","deerNum","atLeft","Math","abs","node","boatPositionLeft","hasDeer","length","animalType","searchSeat","isEmpty","validPassageCount","getOn","passage","onBoat","seatIndex","getOff","sail","delX","delY","sailAction","moveBy","v2","easing","easeCubicActionOut","onLoad","start"],"mappings":"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","file":"Boat.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Data from 'Data';\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    passages: [],  //  存放在船上的animal对象\r\n    boatInfo: {\r\n      default: null,\r\n    },\r\n  },\r\n\r\n  //  初始化座位\r\n  initSeats() {\r\n    this.seats = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      this.seats.push({\r\n        index: i,\r\n        leftPos: {\r\n          x: Data.passagePositionLeft[i].x,\r\n          y: Data.passagePositionLeft[i].y,\r\n        },\r\n        rightPos: {\r\n          x: Data.passagePositionRight[i].x,\r\n          y: Data.passagePositionRight[i].y,\r\n        },\r\n        occupied: false,\r\n      });\r\n    }\r\n  },\r\n\r\n  //  初始化船上动物的数量信息\r\n  initBoatStatus() {\r\n    this.boatInfo = {\r\n      tigerNum: 0,\r\n      deerNum: 0,\r\n    };\r\n  },\r\n\r\n\r\n  //  判断是否在左岸\r\n  atLeft() {\r\n    if (Math.abs(this.node.x - Data.boatPositionLeft.x) < 10) return true;\r\n    return false;\r\n  },\r\n\r\n  //  判断船上是否有鹿\r\n  hasDeer() {\r\n    for (let i = 0; i < this.passages.length; i++) {\r\n      if (this.passages[i] && this.passages[i].animalType === 'deer') return true;\r\n    }\r\n    return false;\r\n  },\r\n  \r\n  //  寻找空座位，如果有座位返回座位index，如果没有返回null\r\n  searchSeat() {\r\n    for (let i = 0; i < this.seats.length; i++) {\r\n      if (!this.seats[i].occupied) return i;\r\n    }\r\n    return -1;\r\n  },\r\n\r\n  //  判断船是否为空\r\n  isEmpty() {\r\n    let validPassageCount = 0;\r\n    for (let i = 0; i < this.passages.length; i++) {\r\n      if (this.passages[i]) validPassageCount++;\r\n    }\r\n    if (validPassageCount < 1) return true;\r\n    return false;\r\n  },\r\n\r\n  //  上船\r\n  getOn(passage, index) {\r\n    // if (index !== -1) \r\n    this.seats[index].occupied = true;\r\n    this.passages[index] = passage;\r\n    passage.onBoat = true;\r\n    passage.seatIndex = index;\r\n  },\r\n\r\n  //  下船\r\n  getOff(passage, index) {\r\n    // console.log('index: ' + index);\r\n    this.seats[index].occupied = false;\r\n    this.passages[index] = null;\r\n    passage.onBoat = false;\r\n    passage.seatIndex = -1;\r\n  },\r\n\r\n  //  移动\r\n  sail({ delX, delY }) {\r\n    const sailAction = cc\r\n      .moveBy(3, cc.v2(delX, delY))\r\n      .easing(cc.easeCubicActionOut());\r\n\r\n    // const se = cc.sequence(sailAction, cc.callFunc(() => {\r\n    //   // console.log('finish');\r\n    // }, this));\r\n    // this.node.runAction(se);\r\n    // console.log('运动距离为:', delX, delY);\r\n    return sailAction;\r\n  },\r\n\r\n  onLoad () {\r\n    this.initSeats();  //  初始化座位对象\r\n    this.initBoatStatus();\r\n    // this.initBoatStatus();\r\n    // console.log(this.seats);\r\n  },\r\n\r\n  start() {\r\n\r\n  },\r\n\r\n  // update (dt) {},\r\n});\r\n"]}